{"ast":null,"code":"var _jsxFileName = \"/home/antomos/code/projects/food app/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-app-ba47e-default-rtdb.firebaseio.com/meals.json');\n      console.log(response);\n      const responseData = await response.json();\n      console.log(responseData);\n      console.log(\"hello\");\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      ;\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n          id: meal.id,\n          name: meal.name,\n          description: meal.description,\n          price: meal.price\n        }, meal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n_s(AvailableMeals, \"Opmz/k+5zTZAoo/mes+3X6ZqQsM=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","Card","MealItem","useEffect","useState","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","console","log","responseData","json","loadedMeals","key","push","id","name","description","price","className","children","map","meal","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/antomos/code/projects/food app/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { useEffect, useState } from 'react';\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n\n      const response = await fetch('https://food-app-ba47e-default-rtdb.firebaseio.com/meals.json');\n      console.log(response);\n      const responseData = await response.json();\n      console.log(responseData);\n      console.log(\"hello\");\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      };\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals();\n  }, []);\n  return (\n  <section className={classes.meals}>\n   <Card>\n      <ul>\n        {meals.map((meal) => (\n          <MealItem\n            id={meal.id}\n            key={meal.id}\n            name={meal.name}\n            description={meal.description}\n            price={meal.price}\n          />\n        ))}\n      </ul>\n    </Card>\n  </section>\n  );\n}\n\nexport default AvailableMeals;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChDD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAE7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,CAAC;MAC7FC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,MAAMI,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CH,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;MACzBF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,MAAMG,WAAW,GAAG,EAAE;MACtB,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;QAC9BE,WAAW,CAACE,IAAI,CAAC;UACfC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,WAAW,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;UAC1CC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;QAC3B,CAAC,CAAC;MACJ;MAAC;MACDhB,QAAQ,CAACU,WAAW,CAAC;MACrBR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IACDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACN,oBACAP,OAAA;IAASqB,SAAS,EAAE3B,OAAO,CAACS,KAAM;IAAAmB,QAAA,eACjCtB,OAAA,CAACL,IAAI;MAAA2B,QAAA,eACFtB,OAAA;QAAAsB,QAAA,EACGnB,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACdxB,OAAA,CAACJ,QAAQ;UACPqB,EAAE,EAAEO,IAAI,CAACP,EAAG;UAEZC,IAAI,EAAEM,IAAI,CAACN,IAAK;UAChBC,WAAW,EAAEK,IAAI,CAACL,WAAY;UAC9BC,KAAK,EAAEI,IAAI,CAACJ;QAAM,GAHbI,IAAI,CAACP,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEZ,CAAC;AAAA1B,EAAA,CA1CKD,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}